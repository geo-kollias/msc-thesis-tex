@misc{cliffc:TheProblem,
      author = "Cliff Click",
      title = "Fixing {T}he {I}nlining {"Problem"}",
      month = "April",
      year = "2011",
      howpublished = "\url{http://www.azulsystems.com/blog/cliff/2011-04-04-fixing-the-inlining-problem}"
}

@misc{infoq:Yammer,
      author = "Alex Blewitt",
      title = "Yammer {M}oving from {S}cala to {J}ava",
      month = "November",
      year = "2011",
      howpublished = "\url{http://www.infoq.com/news/2011/11/yammer-scala}"
}

@misc{paulp:declosurify,
      author = "Phillips, Paul",
      title = "Declosurify",
      howpublished = "\url{https://github.com/paulp/declosurify}"
}

@book{odersky:PiS,
 author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
 title = {Programming in Scala},
 year = {2010},
 isbn = {0981531644},
 edition = {2nd},
 publisher = {Artima Press},
} 

@misc{scaladocs:refl,
      author = "Heather Miller and Eugene Burmako and Philipp Haller",
      title = "Reflection",
      howpublished = "\url{http://docs.scala-lang.org/overviews/reflection/overview.html}"
}

@article{sheard_template_2002,
        title = {{Template meta-programming for Haskell}},
        volume = {37},
        issn = {0362-1340},
        url = {http://doi.acm.org/10.1145/636517.636528},
        doi = {10.1145/636517.636528},
        abstract = {We propose a new extension to the purely functional programming language Haskell that supports compile-time meta-programming. The purpose of the system is to support the algorithmic construction of programs at compile-{time.The} ability to generate code at compile time allows the programmer to implement such features as polytypic programs, macro-like expansion, user directed optimization (such as inlining), and the generation of supporting data structures and functions from existing data structures and {functions.Our} design is being implemented in the Glasgow Haskell Compiler, ghc.},
        number = {12},
        urldate = {2013-05-26},
        journal = {{SIGPLAN} Not.},
        author = {Sheard, Tim and Jones, Simon Peyton},
        month = dec,
        year = {2002},
        keywords = {Meta programming, templates},
        pages = {60-75}
}

@mastersthesis{nemerle:macros,
title = {{Syntax-extending and type-reflecting macros in an object-oriented language}},
author = {Kamil Skalski},
year = {2005},
}

@inproceedings{burmako2012scala,
  title={{Scala Macros, a Technical Report}},
  author={Burmako, Eugene and Odersky, Martin},
  booktitle={Third International Valentin Turchin Workshop on Metacomputation},
  pages={23},
  year={2012}
}

@inproceedings{kohlbecker1986hygienic,
  title={Hygienic macro expansion},
  author={Kohlbecker, Eugene and Friedman, Daniel P and Felleisen, Matthias and Duba, Bruce},
  booktitle={Proceedings of the 1986 ACM conference on LISP and functional programming},
  pages={151--161},
  year={1986},
  organization={ACM}
}